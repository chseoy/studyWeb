<style>
    #div_books img{
        cursor: pointer;
    }
    #div_books .bi-cart-check {
        cursor: pointer;
        color: green;
    }
</style>

<div class="row my-3">
    <div class="col">
        <!-- 검색 기능 -->
        <div class = "row mb-3 justify-content-end"> <!-- 글자가 아니라 전체를 오른쪽으로 옮기기 위해 justify -->
            <form name = "frm" class = "col-6 col-md-4 col-lg-3">
                <div class = "input-group">
                    <input name = "query" class = "form-control" value="java">
                    <button class = "btn btn-primary">검색</button>
                </div>
            </form>
        </div>
        <!-- 검색결과 출력 -->
        <div id = "div_books" class = "row"></div>
        <!-- 페이지 이동 -->
        <div class="text-center">
            <button id = "prev" class="btn btn-primary">이전</button>
            <span id = "span_page" class="mx-3">1/10</span>
            <button id = "next" class="btn btn-primary">다음</button>
        </div>
    </div>
</div>
<!-- 도서 정보 출력 템플릿 -->
<script type = "x-handlebars-template" id = "temp_books"> <!-- index.ejs에 선언해줘서 사용 가능 -->
    {{#each documents}} <!--반복문-->
        <div class = "col-6 col-md-4 col-lg-2 mb-2">
            <div class = "card">
                <div class="card-body">
<!--                    <a href="{{url}}">{{images}}-->
                        <img src="{{chkImage thumbnail}}" width="90%" index="{{@index}}"> <!-- modal 사용으로 인덱스값 넣어줌-->
<!--                    </a>-->
                    <div class="ellipsis text-center">{{title}}</div>
                </div>
                <div class="card-footer">
                    {{fmtPrice price}}
                    <i class="bi bi-cart-check float-end" book="{{book @this}}"></i> <!--장바구니 아이콘 / book에 모든 정보 넣을 수 있게 this-->
                </div>
            </div>
        </div>
    <%-include('books/modal.ejs')%>
    {{/each}}
</script>

<!-- Handlebars 함수-->
<script>
    Handlebars.registerHelper("chkImage", function (image){
        if(image) {
            return image;
        } else {
            return "https://via.placeholder.com/120x170";
        }
    });

    Handlebars.registerHelper("fmtPrice", function (price) {
       return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '원';
    });

    Handlebars.registerHelper("book", function (book) { // 해당 열의 book = book
       return JSON.stringify(book); // 장바구니 아이콘을 눌렀을 때 도서정보를 문자열로 리턴해줌 (해당 열의 book=this)
    });
</script>

<script type="module">
    // 장바구니 상품저장 사전작업(데이터베이스 사전작업)
    import { app } from '/javascripts/firebaseInit.js';
    import { getDatabase, ref, set, get } // get은 중복 확인용
        from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
    const db = getDatabase(app);

    let query = $(frm.query).val();
    let page = 1;

    // 장바구니 아이콘을 클릭했을때
    $("#div_books").on("click", ".bi-cart-check", async function (){ // async를 적어야 await 사용 가능
        if (!sessionStorage.getItem("email")) {
            location.href="/users/login"
        } else {
            // 장바구니에 상품정보 저장
            const book = JSON.parse($(this).attr("book"));
            console.log(book);
            const ref_book = `cart/${sessionStorage.getItem("uid")}/${book.isbn};`// = "/cart/" + sessionStorage.getItem("uid") + "book.isbn"

            // 장바구니 중복 확인 및 담기
            const snapshot = await get(ref(db, ref_book)); // await 기다렸다가 동기화?
            if (snapshot.val()) {
                alert("이미 장바구니에 있습니다.");
            } else
                if(!confirm("장바구니에 저장 하시겠습니까?")) return;
                set(ref(db, ref_book), book);
                alert("장바구니에 추가되었습니다.");
        }
    });

    // 이미지를 클릭했을 때
    $("#div_books").on("click", "img", function () {
        let index = $(this).attr("index");
        // alert(index);
        $("#modal" + index).modal("show");
    });

    $(frm).on("submit", function (e) {
        e.preventDefault(); // 기본 이벤트를 막아라 -> 번쩍하는 거 없앰
        query = $(frm.query).val();
        getBooks();
    });

    // 다음 버튼
    $("#next").on("click", function () {
        page++;
        getBooks();
    });

    // 이전 버튼
    $("#prev").on("click", function () {
        page--;
        getBooks();
    });

    getBooks();
    function getBooks() {
        $.ajax({
            type: "get",
            url: "https://dapi.kakao.com/v3/search/book?target=title",
            headers:{"Authorization":"KakaoAK 3b06b87b5ecf6eb05c3de92d42cad9e8"},
            data: {query:query, page:page, size:6},
            success:function(result) {
                 console.log(result)
                let temp = Handlebars.compile($("#temp_books").html());
                $("#div_books").html(temp(result));

                let last = Math.ceil(result.meta.pageable_count / 5)
                $("#span_page").html(page + "/" + last);

                if(page==1) $("#prev").attr("disabled", true);
                else $("#prev").attr("disabled", false);
                if(result.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        })
    }
</script>